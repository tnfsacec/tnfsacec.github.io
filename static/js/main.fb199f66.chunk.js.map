{"version":3,"sources":["pages/experience.js","pages/post.js","pages/policy.js","pages/motivation.js","pages/open.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["Experience","React","Component","Post","url","this","props","location","pathname","split","request","XMLHttpRequest","open","responseType","send","onload","data","JSON","parse","response","title","context","document","getElementById","innerHTML","Fragment","id","Policy","Motivation","teams","parliamentary","i","length","className","Open","alert","window","replace","script","createElement","async","buildchunk","obj","flow","subtitle","time","chunks","html","toRender","push","App","path","component","Home","exact","from","to","search","state","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fb199f66.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Experience extends React.Component{\r\n    componentDidMount(){\r\n        //let toggle = document.getElementById('3')\r\n        //toggle.classList.add(\"active\")\r\n    }\r\n    render(){\r\n        return(\r\n            <h1>\r\n                Exp\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience","import React from 'react'\r\n\r\n\r\nclass Post extends React.Component{\r\n    componentDidMount() {\r\n        //let toggle = document.getElementById('1')\r\n        //toggle.classList.add(\"active\")\r\n\r\n        const path = this.props.location.pathname.split('/')\r\n        const url = 'https://docs.sivir.pw/post/'+path[2]\r\n        let request = new XMLHttpRequest()\r\n        request.open('GET',url)\r\n        request.responseType = 'text'\r\n        request.send()\r\n        request.onload = ()=>{\r\n            const data = JSON.parse(request.response)\r\n            //window.alert(data['t1']['title'])\r\n            const title = data['title']\r\n            const context = data['context']\r\n\r\n            const toAdd = document.getElementById(\"post\")\r\n            toAdd.innerHTML += \"<div id=\\\"main\\\">\\n\" +\r\n                \"        <!-- Post -->\\n\" +\r\n                \"        <section class=\\\"post\\\">\\n\" +\r\n                \"            <header class=\\\"major\\\">\\n\" +\r\n                \"                <h1>\"+title+\"</h1>\\n\" +\r\n                \"            </header>\\n\" +\r\n                \"            <p>\"+context+\"</p>\\n\" +\r\n                \"            <hr/>\\n\" +\r\n                \"        </section>\\n\" +\r\n                \"    </div>\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div id={\"post\"}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post","import React from 'react'\r\n\r\nclass Policy extends React.Component{\r\n    componentDidMount(){\r\n        //let toggle = document.getElementById('4')\r\n        //toggle.classList.add(\"active\")\r\n    }\r\n    render(){\r\n        return(\r\n          <h1>\r\n              Hello\r\n          </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Policy","import React from 'react'\r\n\r\nclass Motivation extends React.Component{\r\n    componentDidMount(){\r\n\r\n\r\n        const teams = document.getElementById(\"teams\")\r\n        const parliamentary = document.getElementById(\"parliamentary\")\r\n        teams.innerHTML += \"<header class=\\\"major\\\"><h1>正副會長候選人參選動機</h1></header>\"\r\n        parliamentary.innerHTML += \"<header class=\\\"major\\\"><h1>學生議員 (全校選區)參選動機</h1></header>\"\r\n\r\n        const url = \"https://tnfsacec.github.io/file/config.json\"\r\n        let request = new XMLHttpRequest()\r\n        request.open('GET',url)\r\n        request.responseType = 'text'\r\n        request.send()\r\n        request.onload = ()=>{\r\n            const data = JSON.parse(request.response)\r\n            //window.alert(\"president count: \"+ data['president'].length)\r\n            //window.alert(\"parliamentary count \"+data['parliamentary'].length)\r\n            for(let i = 0;i < data['president'].length;++i){\r\n                teams.innerHTML += \"<h2>\"+(i+1)+\"號候選團隊<br>\"+\r\n                    data['president'][i]+\"</h2>\"+\r\n                    \"<blockquote>\"+data['pmo'][i]+\"</blockquote>\"+\r\n                    \"<h2>\"+data['vp'][i]+\"</h2>\"+\r\n                    \"<blockquote>\"+data['vpmo'][i]+\"</blockquote>\"+\r\n                    \"<hr />\"\r\n            }\r\n            for(let i = 0;i < data['parliamentary'].length;++i){\r\n                parliamentary.innerHTML += \"<h2>\"+(i+1)+\"號候選人<br>\"+\r\n                    data['parliamentary'][i]+\"</h2>\"+\r\n                    \"<blockquote>\"+data['parliamentarymotivation'][i]+\"</blockquote>\"\r\n            }\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div id={\"main\"}>\r\n                    <article className={\"post featured\"}>\r\n                        <div id={\"teams\"}></div>\r\n                        <hr />\r\n                        <div id={\"parliamentary\"}></div>\r\n                    </article>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Motivation","import React from 'react'\r\n\r\nclass Open extends React.Component{\r\n    componentDidMount(){\r\n        alert(\"尚未開票，功能未開放\")\r\n        window.location.replace('/')\r\n    }\r\n    render(){\r\n        return(\r\n            <h1>\r\n                Open\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Open","import React from 'react'\r\n\r\nclass Motivation extends React.Component{\r\n    componentDidMount(){\r\n        const script = document.createElement(\"script\");\r\n        script.async = true;\r\n        script.onload = () => {\r\n            window.alert(\"Hello\")\r\n        };\r\n\r\n        const path = this.props.location.pathname.split('/')\r\n        const url = 'https://docs.sivir.pw/home/'+path[2]\r\n        var request = new XMLHttpRequest()\r\n        request.open('GET',url)\r\n        request.responseType = 'text'\r\n        request.send()\r\n        request.onload = ()=>{\r\n            const data = JSON.parse(request.response)\r\n            //window.alert(data['t1']['title'])\r\n            for(var i = 1;i<=data['count'];++i){\r\n                buildchunk(data['t'+i],i)\r\n            }\r\n        }\r\n        function buildchunk(obj,flow){\r\n            var title = obj['title']\r\n            var subtitle = obj['subtitle']\r\n            var time = obj['time']\r\n            let id = obj['id']\r\n            if(id === 1){\r\n                return;\r\n            }\r\n            var chunks = \"chunk\"+flow\r\n            var divappend = document.getElementById(chunks)\r\n            var html = \"<header class=\\\"major\\\">\\n\" +\r\n                \"    <span class=\\\"date\\\">\"+time+\"</span>\\n\" +\r\n                \"    <h2>\"+title+\"</h2>\\n\" +\r\n                \"    <p>\"+subtitle+\"</p>\\n\" +\r\n                \"</header>\\n\" +\r\n                \"<ul class=\\\"actions special\\\">\\n\" +\r\n                \"    <li><a href=\\\"#/post/\"+id+\"\\\" class=\\\"button large\\\">Full Story</a></li>\\n\" +\r\n                \"</ul>\"\r\n            divappend.innerHTML += html\r\n        }\r\n    }\r\n    render(){\r\n        let toRender = []\r\n        for(let i = 1;i <= 5;++i){\r\n            let id = \"chunk\"+i\r\n            toRender.push(<div id={id}></div>)\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <div id={\"main\"}>\r\n                    <article className={\"post featured\"}>\r\n                        {toRender}\r\n                    </article>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Motivation","import React,{Component} from 'react'\n\nimport {\n  HashRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\n\nimport './css/main.css'\nimport Experience from './pages/experience'\nimport Post from './pages/post'\nimport Policy from './pages/policy'\nimport Motivation from './pages/motivation'\nimport Open from './pages/open'\nimport Home from './pages/home'\n\nclass App extends Component{\n  render(){\n    return(\n        <HashRouter>\n            <Switch>\n                <Route path=\"/home/:id\" component={Home}/>\n                <Route path=\"/post/:id\" component={Post}/>\n                <Route path=\"/experience\" component={Experience}/>\n                <Route path=\"/policy\" component={Policy}/>\n                <Route path=\"/motivation\" component={Motivation}/>\n                <Route path=\"/opening\" component={Open} />\n\n                <Redirect exact from={'/'}\n                          to={{pathname:'/home/1'\n                              ,search: \"\"\n                              ,state:{name:'Referrer'}}} />\n                <Redirect exact from={'/home'}\n                          to={{pathname:'/home/1'\n                              ,search: \"\"\n                              ,state:{name:'Referrer'}}} />\n            </Switch>\n\n        </HashRouter>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('main')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}